{"ast":null,"code":"var _jsxFileName = \"/Users/linu/Projects/BORIS/frontend/src/components/Content/Game/Game.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useCallback } from 'react';\nimport { QueueButton } from './components/matchmakeing_button';\nimport MemeOverlay from './components/memeOverlay';\nimport { Radio } from './components/radio';\nimport { Canvas } from './components/Canvas';\nimport { useSocketEmission } from './hooks/useSocketEmission';\nimport { useSocketRecieve } from './hooks/useSocketRecieve';\nimport { socket } from '../../../App';\nimport { InviteForm } from './components/inviteForm';\nimport 'reactjs-popup/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let archivements = /*#__PURE__*/function (archivements) {\n  archivements[archivements[\"chad\"] = 0] = \"chad\";\n  archivements[archivements[\"triggered\"] = 1] = \"triggered\";\n  return archivements;\n}({});\nexport let winningStates = /*#__PURE__*/function (winningStates) {\n  winningStates[winningStates[\"won\"] = 0] = \"won\";\n  winningStates[winningStates[\"lost\"] = 1] = \"lost\";\n  winningStates[winningStates[\"undecided\"] = 2] = \"undecided\";\n  return winningStates;\n}({});\nfunction Game() {\n  _s();\n  // <Means for displaying>\n  const backgroundImg = useRef((() => {\n    const img = new Image();\n    img.src = '/xmas.jpeg';\n    return img;\n  })());\n  const gameStateRef = useRef(null);\n  const goalsPlayerOne = useRef(0);\n  const goalsPlayerTwo = useRef(0);\n  const [showMe, setShowMe] = useState(false);\n  const memeUrl = useRef('/pug-dance.gif');\n  // </Means for displaying>\n\n  // <Stateful>\n  const [displayBtn, setDisplayBtn] = useState(true);\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [CONFIG, setCONFIG] = useState(null);\n  // </Stateful>\n  const winningRef = useRef(winningStates.undecided);\n  const [invitedBy, setInvitedBy] = useState(['nobody', res => {\n    console.log('You fucked up');\n  }]);\n  const toggleDisplayPupUp = useCallback(() => {\n    setDisplayPopUp(!displayPopUp);\n  }, [setDisplayPopUp, displayPopUp]);\n  const displayMeme = useCallback(arch => {\n    if (arch === archivements.chad) memeUrl.current = '/pug-dance.gif';else memeUrl.current = '/pug-triggered.gif';\n    setShowMe(true);\n    setTimeout(() => {\n      setShowMe(false);\n    }, 3000);\n  }, []);\n  const queueBtnHandler = useCallback(event => {\n    // const newSocketConn: Socket<any, any> = io('http://localhost:6969/game', {\n    // \twithCredentials: true,\n    // \tpath: '/gameListener'\n    // });\n    // if (newSocketConn)\n    // \tsetSocket(newSocketConn);\n    if (socket) socket.emit('join', JSON.stringify({}));\n    event.preventDefault();\n    return () => {\n      // if (!newSocketConn.disconnected)\n      // {\n      // \tnewSocketConn.disconnect();\n      // }\n    };\n  }, []);\n  useSocketRecieve(socket, displayMeme, winningRef, goalsPlayerOne, goalsPlayerTwo, gameStateRef, setDisplayBtn, setCONFIG, toggleDisplayPupUp, setInvitedBy);\n  useSocketEmission(socket);\n  if (displayBtn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          backgroundImg: backgroundImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QueueButton, {\n            handler: queueBtnHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InviteForm, {\n        setDisplayBtn: setDisplayBtn,\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Canvas, {\n          gameStateRef: gameStateRef,\n          CONFIG: CONFIG,\n          goalsPlayerOne: goalsPlayerOne,\n          goalsPlayerTwo: goalsPlayerTwo,\n          winningRef: winningRef,\n          backgroundImg: backgroundImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MemeOverlay, {\n          showMeme: showMe,\n          memeUrl: memeUrl.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this);\n  }\n}\n_s(Game, \"dMO1h0Aapv55tpFGeTmiRyl8uL0=\", false, function () {\n  return [useSocketRecieve, useSocketEmission];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useRef","useState","useCallback","QueueButton","MemeOverlay","Radio","Canvas","useSocketEmission","useSocketRecieve","socket","InviteForm","jsxDEV","_jsxDEV","archivements","winningStates","Game","_s","backgroundImg","img","Image","src","gameStateRef","goalsPlayerOne","goalsPlayerTwo","showMe","setShowMe","memeUrl","displayBtn","setDisplayBtn","displayPopUp","setDisplayPopUp","CONFIG","setCONFIG","winningRef","undecided","invitedBy","setInvitedBy","res","console","log","toggleDisplayPupUp","displayMeme","arch","chad","current","setTimeout","queueBtnHandler","event","emit","JSON","stringify","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","handler","className","showMeme","_c","$RefreshReg$"],"sources":["/Users/linu/Projects/BORIS/frontend/src/components/Content/Game/Game.tsx"],"sourcesContent":["import { Config } from './interfaces/config';\nimport { GameState } from './hooks/useSocket';\n\nimport { useRef, useState, useCallback} from 'react';\n\nimport { QueueButton } from './components/matchmakeing_button';\n\nimport MemeOverlay from './components/memeOverlay';\n\nimport { Radio } from './components/radio';\nimport { Canvas } from './components/Canvas';\nimport { useSocketEmission } from './hooks/useSocketEmission';\nimport { useSocketRecieve } from './hooks/useSocketRecieve';\nimport { socket } from '../../../App';\nimport { InviteForm } from './components/inviteForm';\nimport 'reactjs-popup/dist/index.css';\nimport { InvitePopUp } from './components/InvitePopUp';\n\nexport enum archivements {\n\tchad,\n\ttriggered\n}\n\nexport enum winningStates {\n\twon,\n\tlost,\n\tundecided\n}\n\n\nfunction Game() {\n\t// <Means for displaying>\n\tconst backgroundImg: React.MutableRefObject<HTMLImageElement> = useRef((() => {\n\t\tconst img = new Image();\n\t\timg.src = '/xmas.jpeg';\n\t\treturn img;\n\t})());\n\tconst gameStateRef: React.MutableRefObject<GameState | null> = useRef(null)\n\t\n\tconst goalsPlayerOne: React.MutableRefObject<number> = useRef(0)\n\tconst goalsPlayerTwo: React.MutableRefObject<number> = useRef(0)\n\n\tconst [showMe, setShowMe] = useState<boolean>(false);\n\tconst memeUrl = useRef<string>('/pug-dance.gif');\n\t// </Means for displaying>\n\t\n\t// <Stateful>\n\tconst [displayBtn, setDisplayBtn] = useState<boolean>(true);\n\tconst [displayPopUp, setDisplayPopUp] = useState<boolean>(false);\n\tconst [CONFIG, setCONFIG] = useState<Config | null>(null);\n\t// </Stateful>\n\tconst winningRef: React.MutableRefObject<winningStates> = useRef(winningStates.undecided);\n\tconst [invitedBy, setInvitedBy] = useState<[string, (res: string) => void]>(['nobody', (res: string) => {console.log('You fucked up')}]);\n\n\tconst toggleDisplayPupUp = useCallback(() => {\n\t\tsetDisplayPopUp(!displayPopUp);\n\t}, [setDisplayPopUp, displayPopUp]);\n\n\tconst displayMeme = useCallback((arch: archivements) => {\n\t\tif (arch === archivements.chad)\n\t\t\tmemeUrl.current = '/pug-dance.gif';\n\t\telse\n\t\t\tmemeUrl.current = '/pug-triggered.gif'\n\t\t\n\t\tsetShowMe(true);\n\t\tsetTimeout(() => {\n\t\t\tsetShowMe(false)\n\t\t}, 3000);\n\t}, [])\n\n\tconst queueBtnHandler = useCallback((event: any) => {\n\t\t// const newSocketConn: Socket<any, any> = io('http://localhost:6969/game', {\n\t\t// \twithCredentials: true,\n\t\t// \tpath: '/gameListener'\n\t\t// });\n\t\t// if (newSocketConn)\n\t\t// \tsetSocket(newSocketConn);\n\t\tif (socket)\n\t\t\tsocket.emit('join', JSON.stringify({}));\n\n\t\tevent.preventDefault();\n\n\t\treturn (() => {\n\t\t\t// if (!newSocketConn.disconnected)\n\t\t\t// {\n\t\t\t// \tnewSocketConn.disconnect();\n\t\t\t// }\n\t\t})\n\n\t}, []);\n\n\tuseSocketRecieve(socket,\n\t\tdisplayMeme,\n\t\twinningRef,\n\t\tgoalsPlayerOne,\n\t\tgoalsPlayerTwo,\n\t\tgameStateRef,\n\t\tsetDisplayBtn,\n\t\tsetCONFIG,\n\t\ttoggleDisplayPupUp,\n\t\tsetInvitedBy);\n\n\tuseSocketEmission(socket);\n\t\n\tif (displayBtn) {\n\t\treturn\t\t<div>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<Radio backgroundImg={backgroundImg} />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<QueueButton handler={queueBtnHandler}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<InviteForm setDisplayBtn={setDisplayBtn} socket={socket}/>\n\t\t\t\t\t</div>\n\t}\n\telse {\n\t\treturn (<div className='canvas-container'>\n\t\t\t\t\t<div className='canvas-wrapper'>\n\t\t\t\t\t\t<Canvas gameStateRef={gameStateRef} CONFIG={CONFIG} goalsPlayerOne={goalsPlayerOne} goalsPlayerTwo={goalsPlayerTwo} winningRef={winningRef} backgroundImg={backgroundImg} />\n\t\t\t\t\t\t<MemeOverlay showMeme={showMe} memeUrl={memeUrl.current}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)\n\t}\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
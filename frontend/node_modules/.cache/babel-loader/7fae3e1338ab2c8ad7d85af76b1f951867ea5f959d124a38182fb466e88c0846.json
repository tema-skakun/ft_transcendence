{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { archivements, winningStates } from \"../Game\";\nimport { useEffect } from \"react\";\n\n// function attach(socket: Socket<any, any>, event: string, cb: Function) {\n// \tif (!socket.hasListeners(event))\n// \t{\n// \t\tsocket.on(event, cb);\n// \t}\n// }\n\nexport function useSocketRecieve(socket, displayMeme, winningRef, goalsPlayerOne, goalsPlayerTwo, gameStateRef, setDisplayBtn, setCONFIG, toggleDisplayPopUp, setInvitedBy) {\n  _s();\n  const manageSocketConnection = useCallback(() => {\n    if (!socket) return;\n    socket.onAny(function (eventName) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (typeof args[0] !== 'string' && typeof args[0] !== 'undefined') {\n        return;\n      }\n      switch (eventName) {\n        case 'tripple streak':\n          displayMeme(archivements.chad);\n          break;\n        // case 'inviteReq':\n        // \tsetInvitedBy([args[0], args[1]]);\n        // \ttoggleDisplayPopUp();\n        // \tbreak;\n        case 'tripple loose':\n          {\n            displayMeme(archivements.triggered);\n            break;\n          }\n        case 'winner':\n          winningRef.current = winningStates.won;\n          goalsPlayerOne.current = 0;\n          goalsPlayerTwo.current = 0;\n          ;\n          console.log('winner started');\n          setTimeout(() => {\n            console.log('winner ended');\n            gameStateRef.current = null;\n            setDisplayBtn(true);\n            winningRef.current = winningStates.undecided;\n          }, 3000);\n          break;\n        case 'looser':\n          winningRef.current = winningStates.lost;\n          goalsPlayerOne.current = 0;\n          goalsPlayerTwo.current = 0;\n          console.log('winner ended');\n          setTimeout(() => {\n            console.log('winner ended');\n            gameStateRef.current = null;\n            setDisplayBtn(true);\n            winningRef.current = winningStates.undecided;\n          }, 3000);\n          break;\n        case 'disconnect':\n          console.log('disconnected');\n          goalsPlayerOne.current = 0;\n          goalsPlayerTwo.current = 0;\n          setTimeout(() => {\n            gameStateRef.current = null;\n            setDisplayBtn(true);\n            winningRef.current = winningStates.undecided;\n          }, 3000);\n          break;\n        case 'handshake':\n          setDisplayBtn(false);\n          console.log('HANDSHAKE');\n          setCONFIG(JSON.parse(args[0]));\n          break;\n        case 'gameState':\n          console.log('GAMESTATE');\n          gameStateRef.current = JSON.parse(args[0]);\n          break;\n        case 'goal':\n          console.log('A GOOAL HAS HAPPENDED');\n          if (args[0] === 'player1') {\n            ++goalsPlayerOne.current;\n          } else if (args[0] === 'player2') {\n            ++goalsPlayerTwo.current;\n          }\n          break;\n        case 'playerDisconnect':\n          console.log('player disconnected');\n          setDisplayBtn(true);\n          goalsPlayerOne.current = 0;\n          goalsPlayerTwo.current = 0;\n          gameStateRef.current = null;\n          winningRef.current = winningStates.undecided;\n          break;\n        default:\n          console.log('no such listener');\n          break;\n      }\n    });\n    return () => {\n      console.log('Deactivating');\n      socket.offAny();\n    };\n  }, [socket, displayMeme, winningRef, setDisplayBtn, goalsPlayerOne, goalsPlayerTwo, setCONFIG, gameStateRef]);\n  useEffect(manageSocketConnection, [manageSocketConnection]);\n}\n_s(useSocketRecieve, \"7mERBvtFZDy6ZlDn65rAljCdqzY=\");","map":{"version":3,"names":["useCallback","archivements","winningStates","useEffect","useSocketRecieve","socket","displayMeme","winningRef","goalsPlayerOne","goalsPlayerTwo","gameStateRef","setDisplayBtn","setCONFIG","toggleDisplayPopUp","setInvitedBy","_s","manageSocketConnection","onAny","eventName","_len","arguments","length","args","Array","_key","chad","triggered","current","won","console","log","setTimeout","undecided","lost","JSON","parse","offAny"],"sources":["/Users/linu/Projects/BORIS/frontend/src/components/Content/Game/hooks/useSocketRecieve.ts"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { archivements, winningStates } from \"../Game\";\nimport { GameState } from \"./useSocket\";\nimport { useEffect } from \"react\";\n\n// function attach(socket: Socket<any, any>, event: string, cb: Function) {\n// \tif (!socket.hasListeners(event))\n// \t{\n// \t\tsocket.on(event, cb);\n// \t}\n// }\n\nexport function useSocketRecieve(socket: Socket<any, any> | null,\n\tdisplayMeme: (a: archivements) => void,\n\twinningRef: React.MutableRefObject<winningStates>,\n\tgoalsPlayerOne: React.MutableRefObject<number>,\n\tgoalsPlayerTwo: React.MutableRefObject<number>,\n\tgameStateRef: React.MutableRefObject<GameState | null>,\n\tsetDisplayBtn: Function,\n\tsetCONFIG: Function,\n\ttoggleDisplayPopUp: () => void,\n\tsetInvitedBy: Function) {\n\n\tconst manageSocketConnection = useCallback(() => {\n\t\tif (!socket)\n\t\t\treturn ;\n\n\t\tsocket.onAny((eventName: string, ...args: unknown []) => {\n\t\t\tif (typeof args[0] !== 'string' && typeof args[0] !== 'undefined')\n\t\t\t{\n\t\t\t\treturn ;\n\t\t\t}\n\n\t\t\tswitch (eventName) {\n\t\t\t\tcase 'tripple streak':\n\t\t\t\t\tdisplayMeme(archivements.chad);\n\t\t\t\t\tbreak;\n\t\t\t\t// case 'inviteReq':\n\t\t\t\t// \tsetInvitedBy([args[0], args[1]]);\n\t\t\t\t// \ttoggleDisplayPopUp();\n\t\t\t\t// \tbreak;\n\t\t\t\tcase 'tripple loose':\n\t\t\t\t\t{\n\t\t\t\t\tdisplayMeme(archivements.triggered);\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'winner':\n\t\t\t\t\twinningRef.current = winningStates.won;\n\t\t\t\t\tgoalsPlayerOne.current = 0;\n\t\t\t\t\tgoalsPlayerTwo.current = 0;;\n\t\t\t\t\tconsole.log('winner started');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconsole.log('winner ended');\n\t\t\t\t\t\tgameStateRef.current = null;\n\t\t\t\t\t\tsetDisplayBtn(true);\n\t\t\t\t\t\twinningRef.current = winningStates.undecided;\n\t\t\t\t\t}, 3000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'looser':\n\t\t\t\t\twinningRef.current = winningStates.lost;\n\t\t\t\t\tgoalsPlayerOne.current = 0;\n\t\t\t\t\tgoalsPlayerTwo.current = 0;\n\t\t\t\t\tconsole.log('winner ended');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconsole.log('winner ended');\n\t\t\t\t\t\tgameStateRef.current = null;\n\t\t\t\t\t\tsetDisplayBtn(true);\n\t\t\t\t\t\twinningRef.current = winningStates.undecided;\n\t\t\t\t\t}, 3000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disconnect':\n\t\t\t\t\tconsole.log('disconnected');\n\t\t\t\t\tgoalsPlayerOne.current = 0;\n\t\t\t\t\tgoalsPlayerTwo.current = 0;\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tgameStateRef.current = null;\n\t\t\t\t\t\tsetDisplayBtn(true);\n\t\t\t\t\t\twinningRef.current = winningStates.undecided;\n\t\t\t\t\t}, 3000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'handshake':\n\t\t\t\t\tsetDisplayBtn(false);\n\t\t\t\t\tconsole.log('HANDSHAKE');\n\t\t\t\t\tsetCONFIG(JSON.parse(args[0] as string))\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gameState':\n\t\t\t\t\tconsole.log('GAMESTATE');\n\t\t\t\t\tgameStateRef.current = JSON.parse(args[0] as string);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'goal':\n\t\t\t\t\tconsole.log('A GOOAL HAS HAPPENDED');\n\t\t\t\t\tif (args[0] === 'player1')\n\t\t\t\t\t{\n\t\t\t\t\t\t++goalsPlayerOne.current;\n\t\t\t\t\t}\n\t\t\t\t\telse if (args[0] === 'player2')\n\t\t\t\t\t{\n\t\t\t\t\t\t++goalsPlayerTwo.current;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'playerDisconnect':\n\t\t\t\t\tconsole.log('player disconnected');\n\t\t\t\t\tsetDisplayBtn(true);\n\t\t\t\t\tgoalsPlayerOne.current = 0;\n\t\t\t\t\tgoalsPlayerTwo.current = 0;\n\t\t\t\t\tgameStateRef.current = null;\n\t\t\t\t\twinningRef.current = winningStates.undecided;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('no such listener');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t})\n\n\t\treturn (() =>\n\t\t{\n\t\t\tconsole.log('Deactivating');\n\t\t\tsocket.offAny();\n\t\t}\n\t\t)\n\t}, [socket, displayMeme,\n\twinningRef,\n\tsetDisplayBtn,\n\tgoalsPlayerOne,\n\tgoalsPlayerTwo,\n\tsetCONFIG,\n\tgameStateRef])\n\n\tuseEffect(manageSocketConnection, [manageSocketConnection]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
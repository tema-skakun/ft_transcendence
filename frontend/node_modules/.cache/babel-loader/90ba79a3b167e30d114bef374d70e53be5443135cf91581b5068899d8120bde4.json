{"ast":null,"code":"var _jsxFileName = \"/Users/linu/Projects/BORIS/frontend/src/components/Content/Chat/Chat.tsx\";\nimport style from './Chat.module.css';\nimport React from \"react\";\nimport ChatItem from \"./ChatItem/ChatItem\";\nimport Message from \"./Message/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = props => {\n  let dialogsElements = props.chatPage.chat.map(d => /*#__PURE__*/_jsxDEV(ChatItem, {\n    name: d.name,\n    id: d.id,\n    ava: d.avatarLink\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 63\n  }, this));\n  let messagesElements = props.chatPage.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 68\n  }, this));\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  };\n  const newMessageElement = /*#__PURE__*/React.createRef();\n  let onMessageChange = () => {\n    var _newMessageElement$cu;\n    let body = (_newMessageElement$cu = newMessageElement.current) === null || _newMessageElement$cu === void 0 ? void 0 : _newMessageElement$cu.value;\n    props.updateNewMessageBody(body);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.chatItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.textarea,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter your message\",\n        onChange: onMessageChange,\n        ref: newMessageElement,\n        value: props.chatPage.newMessageBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSendMessageClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["style","React","ChatItem","Message","jsxDEV","_jsxDEV","Chat","props","dialogsElements","chatPage","chat","map","d","name","id","ava","avatarLink","fileName","_jsxFileName","lineNumber","columnNumber","messagesElements","messages","m","message","onSendMessageClick","sendMessage","newMessageElement","createRef","onMessageChange","_newMessageElement$cu","body","current","value","updateNewMessageBody","className","children","chatItems","textarea","placeholder","onChange","ref","newMessageBody","button","onClick","_c","$RefreshReg$"],"sources":["/Users/linu/Projects/BORIS/frontend/src/components/Content/Chat/Chat.tsx"],"sourcesContent":["import style from './Chat.module.css'\nimport React from \"react\";\nimport ChatItem from \"./ChatItem/ChatItem\";\nimport Message from \"./Message/Message\";\n\nconst Chat = (props: any) => {\n    let dialogsElements = props.chatPage.chat.map((d: any) => <ChatItem name={d.name} key={d.id} id={d.id} ava={d.avatarLink}/>);\n    let messagesElements = props.chatPage.messages.map((m: any) => <Message message={m.message} key={m.id}/>);\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n    };\n\n    const newMessageElement = React.createRef<HTMLTextAreaElement>();\n\n    let onMessageChange = () => {\n        let body = newMessageElement.current?.value;\n        props.updateNewMessageBody(body);\n    };\n\n    return (\n        <div className={style.chat}>\n            <div className={style.chatItems}>\n                {dialogsElements}\n            </div>\n            <div className={style.messages}>\n                {messagesElements}\n            </div>\n            <div className={style.textarea}>\n                <textarea\n                    placeholder='Enter your message'\n                    onChange={onMessageChange}\n                    ref={newMessageElement}\n                    value={props.chatPage.newMessageBody}\n                />\n            </div>\n            <div className={style.button}>\n                <button onClick={onSendMessageClick}>\n                    Send\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAIC,KAAU,IAAK;EACzB,IAAIC,eAAe,GAAGD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,CAAM,iBAAKP,OAAA,CAACH,QAAQ;IAACW,IAAI,EAAED,CAAC,CAACC,IAAK;IAAYC,EAAE,EAAEF,CAAC,CAACE,EAAG;IAACC,GAAG,EAAEH,CAAC,CAACI;EAAW,GAAlCJ,CAAC,CAACE,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAgC,CAAC;EAC5H,IAAIC,gBAAgB,GAAGd,KAAK,CAACE,QAAQ,CAACa,QAAQ,CAACX,GAAG,CAAEY,CAAM,iBAAKlB,OAAA,CAACF,OAAO;IAACqB,OAAO,EAAED,CAAC,CAACC;EAAQ,GAAMD,CAAC,CAACT,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,CAAC;EAEzG,IAAIK,kBAAkB,GAAGA,CAAA,KAAM;IAC3BlB,KAAK,CAACmB,WAAW,EAAE;EACvB,CAAC;EAED,MAAMC,iBAAiB,gBAAG1B,KAAK,CAAC2B,SAAS,EAAuB;EAEhE,IAAIC,eAAe,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACxB,IAAIC,IAAI,IAAAD,qBAAA,GAAGH,iBAAiB,CAACK,OAAO,cAAAF,qBAAA,uBAAzBA,qBAAA,CAA2BG,KAAK;IAC3C1B,KAAK,CAAC2B,oBAAoB,CAACH,IAAI,CAAC;EACpC,CAAC;EAED,oBACI1B,OAAA;IAAK8B,SAAS,EAAEnC,KAAK,CAACU,IAAK;IAAA0B,QAAA,gBACvB/B,OAAA;MAAK8B,SAAS,EAAEnC,KAAK,CAACqC,SAAU;MAAAD,QAAA,EAC3B5B;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,eACNf,OAAA;MAAK8B,SAAS,EAAEnC,KAAK,CAACsB,QAAS;MAAAc,QAAA,EAC1Bf;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf,eACNf,OAAA;MAAK8B,SAAS,EAAEnC,KAAK,CAACsC,QAAS;MAAAF,QAAA,eAC3B/B,OAAA;QACIkC,WAAW,EAAC,oBAAoB;QAChCC,QAAQ,EAAEX,eAAgB;QAC1BY,GAAG,EAAEd,iBAAkB;QACvBM,KAAK,EAAE1B,KAAK,CAACE,QAAQ,CAACiC;MAAe;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACNf,OAAA;MAAK8B,SAAS,EAAEnC,KAAK,CAAC2C,MAAO;MAAAP,QAAA,eACzB/B,OAAA;QAAQuC,OAAO,EAAEnB,kBAAmB;QAAAW,QAAA,EAAC;MAErC;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAyB,EAAA,GAtCKvC,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
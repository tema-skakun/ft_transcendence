{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nlet initialState = {\n  user: {\n    id: 1,\n    login: \"fdarkhaw\",\n    password: \"Qwerty_12345\",\n    name: \"Darkhawk\",\n    userAvatar: \"https://playcontestofchampions.com/wp-content/uploads/2021/11/champion-darkhawk.jpg\",\n    userFriends: [],\n    userStatus: {\n      1: \"online\",\n      2: \"offline\",\n      3: \"in a waiting room\",\n      4: \"in a game\"\n    },\n    statWins: 0,\n    statLosses: 0,\n    ladderLevel: 0,\n    //for example: for winning +10ex, for losing -5ex\n    userAchievements: []\n  },\n  users: [],\n  allAchievements: {\n    unstoppable: \"10 wins in a row\",\n    invincible: \"5 wins in a row\"\n  }\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: true\n            };\n          }\n          return u;\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: false\n            };\n          }\n          return u;\n        })\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      };\n    default:\n      return state;\n  }\n};\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default profileReducer;","map":{"version":3,"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","user","id","login","password","name","userAvatar","userFriends","userStatus","statWins","statLosses","ladderLevel","userAchievements","users","allAchievements","unstoppable","invincible","profileReducer","state","arguments","length","undefined","action","type","map","u","userId","followed","followAC","unfollowAC","setUsersAC"],"sources":["/Users/linu/Projects/BORIS/frontend/src/Redux/profile-reducer.ts"],"sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\n\nlet initialState: any = {\n    user: {\n        id: 1,\n        login: \"fdarkhaw\",\n        password: \"Qwerty_12345\",\n        name: \"Darkhawk\",\n        userAvatar: \"https://playcontestofchampions.com/wp-content/uploads/2021/11/champion-darkhawk.jpg\",\n        userFriends: [],\n        userStatus: {1: \"online\", 2: \"offline\", 3: \"in a waiting room\", 4: \"in a game\"},\n        statWins: 0,\n        statLosses: 0,\n        ladderLevel: 0,//for example: for winning +10ex, for losing -5ex\n        userAchievements: []\n    },\n    users: [],\n    allAchievements: {\n        unstoppable: \"10 wins in a row\",\n        invincible: \"5 wins in a row\"\n    }\n}\n\n\nconst profileReducer = (state: any = initialState, action: any) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u: any) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u: any) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS:\n            return {...state, users: [...action.users]}\n        default:\n            return state;\n    }\n\n}\n\nexport const followAC = (userId: any) => ({type: FOLLOW, userId})\nexport const unfollowAC = (userId: any) => ({type: UNFOLLOW, userId})\nexport const setUsersAC = (users: any) => ({type: SET_USERS, users})\n\nexport default profileReducer;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAQ;AACvB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,SAAS,GAAG,WAAW;AAE7B,IAAIC,YAAiB,GAAG;EACpBC,IAAI,EAAE;IACFC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,cAAc;IACxBC,IAAI,EAAE,UAAU;IAChBC,UAAU,EAAE,qFAAqF;IACjGC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE;MAAC,CAAC,EAAE,QAAQ;MAAE,CAAC,EAAE,SAAS;MAAE,CAAC,EAAE,mBAAmB;MAAE,CAAC,EAAE;IAAW,CAAC;IAC/EC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IAAC;IACfC,gBAAgB,EAAE;EACtB,CAAC;EACDC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAE;IACbC,WAAW,EAAE,kBAAkB;IAC/BC,UAAU,EAAE;EAChB;AACJ,CAAC;AAGD,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAA4C;EAAA,IAA3CC,KAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGnB,YAAY;EAAA,IAAEsB,MAAW,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE1D,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK1B,MAAM;MACP,OAAO;QACH,GAAGqB,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACW,GAAG,CAAEC,CAAM,IAAK;UAC/B,IAAIA,CAAC,CAACvB,EAAE,KAAKoB,MAAM,CAACI,MAAM,EAAE;YACxB,OAAO;cAAC,GAAGD,CAAC;cAAEE,QAAQ,EAAE;YAAI,CAAC;UACjC;UACA,OAAOF,CAAC;QACZ,CAAC;MACL,CAAC;IACL,KAAK3B,QAAQ;MACT,OAAO;QACH,GAAGoB,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACW,GAAG,CAAEC,CAAM,IAAK;UAC/B,IAAIA,CAAC,CAACvB,EAAE,KAAKoB,MAAM,CAACI,MAAM,EAAE;YACxB,OAAO;cAAC,GAAGD,CAAC;cAAEE,QAAQ,EAAE;YAAK,CAAC;UAClC;UACA,OAAOF,CAAC;QACZ,CAAC;MACL,CAAC;IACL,KAAK1B,SAAS;MACV,OAAO;QAAC,GAAGmB,KAAK;QAAEL,KAAK,EAAE,CAAC,GAAGS,MAAM,CAACT,KAAK;MAAC,CAAC;IAC/C;MACI,OAAOK,KAAK;EAAC;AAGzB,CAAC;AAED,OAAO,MAAMU,QAAQ,GAAIF,MAAW,KAAM;EAACH,IAAI,EAAE1B,MAAM;EAAE6B;AAAM,CAAC,CAAC;AACjE,OAAO,MAAMG,UAAU,GAAIH,MAAW,KAAM;EAACH,IAAI,EAAEzB,QAAQ;EAAE4B;AAAM,CAAC,CAAC;AACrE,OAAO,MAAMI,UAAU,GAAIjB,KAAU,KAAM;EAACU,IAAI,EAAExB,SAAS;EAAEc;AAAK,CAAC,CAAC;AAEpE,eAAeI,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
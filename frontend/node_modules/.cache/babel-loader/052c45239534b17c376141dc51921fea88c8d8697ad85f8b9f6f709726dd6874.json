{"ast":null,"code":"var _jsxFileName = \"/Users/linu/Projects/BORIS/frontend/src/components/Content/Chat/joinChannelButton/joinChannelButton.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport JSCookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JoinChannelButton = _ref => {\n  _s();\n  let {\n    closeModal,\n    socket\n  } = _ref;\n  const [channels, setChannels] = useState([]);\n  const [selectedChannelId, setSelectedChannelId] = useState('');\n  useEffect(() => {\n    const getChannels = async () => {\n      try {\n        const res = await axios.get(`http://${process.env.REACT_APP_IP_BACKEND}:6969/chat/channelsCanJoin`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${JSCookies.get('accessToken')}`\n          }\n        });\n        setChannels(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getChannels();\n  }, []);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (selectedChannelId) {\n      const selectedChannel = channels.find(channel => channel.id === selectedChannelId);\n      if (selectedChannel.password) {\n        const password = prompt('Enter channel password: ');\n        console.log('pass: ' + password);\n        const chann = {\n          channelId: selectedChannelId,\n          password: password\n        };\n        socket.emit('joinChannel', chann, callback => {\n          if (callback) {\n            alert(callback);\n            return;\n          }\n        });\n        closeModal();\n      }\n    }\n  }\n  function handleCheckboxChange(channelId) {\n    setSelectedChannelId(channelId);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Join channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [channels.map(channel => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: channel.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"channel\",\n            id: channel.id,\n            value: channel.id,\n            label: channel.name,\n            checked: channel.id === selectedChannelId,\n            onChange: () => handleCheckboxChange(channel.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 6\n          }, this)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(JoinChannelButton, \"MI/GTZjlug3M4SAtcctmjyXWA5E=\");\n_c = JoinChannelButton;\nexport default JoinChannelButton;\nvar _c;\n$RefreshReg$(_c, \"JoinChannelButton\");","map":{"version":3,"names":["useEffect","useState","Button","Modal","Form","axios","JSCookies","jsxDEV","_jsxDEV","Fragment","_Fragment","JoinChannelButton","_ref","_s","closeModal","socket","channels","setChannels","selectedChannelId","setSelectedChannelId","getChannels","res","get","process","env","REACT_APP_IP_BACKEND","headers","data","err","console","log","handleSubmit","e","preventDefault","selectedChannel","find","channel","id","password","prompt","chann","channelId","emit","callback","alert","handleCheckboxChange","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","map","Group","controlId","Check","type","name","value","label","checked","onChange","Footer","_c","$RefreshReg$"],"sources":["/Users/linu/Projects/BORIS/frontend/src/components/Content/Chat/joinChannelButton/joinChannelButton.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport JSCookies from 'js-cookie';\n\nconst JoinChannelButton = ({ closeModal, socket }: {closeModal: any, socket: any}) => {\n\tconst [channels, setChannels] = useState<any>([]);\n\tconst [selectedChannelId, setSelectedChannelId] = useState<string>('');\n\n\tuseEffect(() =>{\n\t\tconst getChannels = async ()=>{\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(`http://${process.env.REACT_APP_IP_BACKEND}:6969/chat/channelsCanJoin`, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Authorization': `Bearer ${JSCookies.get('accessToken')}`,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tsetChannels(res.data);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t\tgetChannels();\n\t}, [])\n\n\tasync function handleSubmit(e: any) {\n\t\te.preventDefault();\n\t\tif (selectedChannelId) {\n\t\t\tconst selectedChannel = channels.find((channel: any) => channel.id === selectedChannelId);\n\t\t\tif (selectedChannel.password) {\n\t\t\t\tconst password = prompt('Enter channel password: ');\n\t\t\t\tconsole.log('pass: ' + password);\n\t\t\t\tconst chann = {\n\t\t\t\t\tchannelId: selectedChannelId,\n\t\t\t\t\tpassword: password,\n\t\t\t\t}\n\t\t\t\tsocket.emit('joinChannel', chann, (callback: any) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\talert(callback);\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleCheckboxChange(channelId: any) {\n\t\tsetSelectedChannelId(channelId);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Modal.Header closeButton><Modal.Title>Join channel</Modal.Title></Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t{channels.map((channel: any) => (\n\t\t\t\t\t<Form.Group key={channel.id} controlId={channel.id}>\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"channel\"\n\t\t\t\t\t\tid={channel.id}\n\t\t\t\t\t\tvalue={channel.id}\n\t\t\t\t\t\tlabel={channel.name}\n\t\t\t\t\t\tchecked={channel.id === selectedChannelId}\n\t\t\t\t\t\tonChange={() => handleCheckboxChange(channel.id)}\n\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t))}\n\t\t\t\t<Modal.Footer> <Button type=\"submit\">Join</Button> </Modal.Footer>\n\t\t\t\t</Form>\n\t\t\t</Modal.Body>\n\t\t</>\n\t);\n};\n\nexport default JoinChannelButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}